Изпъпняват операции върт отделни битове. 
Ще разгледаме числата в в двойчната бройна система. 

Използват се:
Ако пишем ембедед (например) там ще се използват много. 
По-бързи от артм. операции 

1.Има няколко бинарни оператора:

1.1) Шифтване на ляво и на дясно

00001101 >> 2 = 00000011 --> последните два бита изпадат. И кна тяхното място се добавят 0ли.
13 = 00001101

00001101<< 1 = 00011010 --> крайните два най-старши бита изпадат. Всичко отива наляво и се появява 0
000011010 = 26

~ Побитово отрицание (bitwise NOT) --> Обръща битовете. 
~0001 = 1110

1.2) (& - И) Бинарен оператор, Изпъпнявва се в-у две променливи и когато и в двете променливи един бит е сетнат
на единица резултатния бут в резултата е единица. 

& Побитово И
a = 0011
&
b = 0101
R = 0001

1.3)| Побитово ИЛИ - Ако поне един от двата е единица резултата е единица

a = 0011
|
b = 0101
r = 0111

1.4) ^XOR - ако са еднакви реултатния бит е 0. Изключващо

a = 0011
^
b = 0101
r =
0110

2. Свойства на побитовите оператори:
2.1) За да променим n тия bit на променливата а на 1 трябва да
използваме побитово ИЛИ
int a = 15; в двоичен вид това е числото 0000 1111
Ако искаме да сетнем нулата на пета позиция правим маска 
00100000, като шифтнем 1 << 5; пъти. След това прилагаме побитово
ИЛИ на променливата и маската:

0000 1111
|
0010 0000
= 0010 1111

2.1)За да направим на 0 съответния бит на n-та позиция, трябва да
използваме побитово &
int a = 35; в двоичен вид това е числото 0010 0011
Ако искаме да променим единицата на пета позиция, правим маска
0010 0000, като шифтнем 1 << 5; пъти. След това приложим побитово
отрицание ~ на маската, за да получим 1101 111. След това, като приложим
побитов оператор И, получаваме от 1 нула на 5-та позиция:
0010 0011
&
1101 1111
= 0000 0011

3.2)За да обърнем n-тия bit на променливата а на 1, трябва да
използваме побитово XOR
int a = 15; в двоичен вид това е числото 0000 1111
Ако искаме да обърнем нулата на пета позиция, правим маска
0010 0000, като шифтнем 1 << 5; пъти. След това прилагаме
побитово XOR на променливата и маската:
0000 1111
^
0010 0000
= 0010 1111
