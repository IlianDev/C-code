Characters in C
1. Дефиниция - string e  масив от символи, завъшващ с '\0'

char[] = "This is an another initialized string!";
char *u = "This is another string!"

Използват се ""

Нека char *u = "This is another string!";
Тогава
u[0] == 'T'
u[1] == 'h'
u[2] == 'i'
…
u[21] == 'g'
u[22] == '!'
u[23] == '\0'
// Когато u e указател към char, на практика значи, че u сочи масив от символи. 

2. Използва се библиотеката <string.h>

- int strlen(char *s) - връща дължината на стринга 
char string_name[] = "asd123";

    int length = strlen(string_name);
    printf("%d", length);
 //връща дължината на стринг
Като се изключи литерала '\0'

- char* strcpy(char *s, char *ct) – 
копира стринга ct във стринга s, като
връща s. 
    char s[] = "asd123";
    char name[] = "abc";

    strcpy(s, name); 
    printf("%s", s); // "abc"
// копира name в s,(презаписва)

- strcat()
In C programming, the strcat() function contcatenates (joins) two strings.
As you can see, the strcat() function takes two arguments:
destination - destination string
source - source string

    char str1[100] = "This is ", str2[] = "concatenation";

    // concatenate str1 and str2
    // so the result will be stored in str1

    strcat(str1, str2);
    puts(str1); // This is concatenation
    puts(str2); // concatenation

    printf("%s", str1); //This is concatenation

- strchr(s1, c) - 
намира първото появяване на определен символ в низ.
returns a pointer to the first occurrence 
of the character c in the string s1 and returns NULL 
if the character c is not found in the string s1.

char s1[ ]= "Hello Blogsdope"; 
  char c = 'B';
  char *p;
  p = strchr(s1, c);
  printf("%s\n", p); // Blogsdope
  return 0;


